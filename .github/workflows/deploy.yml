# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Upload node modules
        uses: actions/upload-artifact@v1
        with:
          name: node_modules
          path: "."

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Download node modules
        uses: actions/download-artifact@v1
        with:
          name: node_modules
          path: "."
      - run: ls . -al
      - name: Unit test
        run: yarn run test
        env:
          NODE_ENV: production

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Download node modules
        uses: actions/download-artifact@v1
        with:
          name: node_modules
          path: "."
      - run: ls . -al
      - name: Lint
        run: yarn run lint
        env:
          NODE_ENV: production

  build:
    needs: [lint,test]
    runs-on: ubuntu-latest
    steps:
      - name: Download node modules
        uses: actions/download-artifact@v1
        with:
          name: node_modules
          path: "."
      - run: ls . -al
      - name: Build
        run: yarn run build
        env:
          NODE_ENV: production
      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: "."
 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: build
          path: "."
      - run: ls . -al
      - name: Deploy
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
        with:
          source: "."
          target: "/usr/local/lsws/davcs86me/html/node"
